"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[7659],{3905:function(e,r,t){t.d(r,{Zo:function(){return d},kt:function(){return m}});var n=t(7294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function u(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=n.createContext({}),a=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):u(u({},r),e)),t},d=function(e){var r=a(e.components);return n.createElement(l.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=a(t),m=s,k=p["".concat(l,".").concat(m)]||p[m]||c[m]||o;return t?n.createElement(k,u(u({ref:r},d),{},{components:t})):n.createElement(k,u({ref:r},d))}));function m(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var o=t.length,u=new Array(o);u[0]=p;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,u[1]=i;for(var a=2;a<o;a++)u[a]=t[a];return n.createElement.apply(null,u)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3297:function(e,r,t){t.r(r),t.d(r,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return a},toc:function(){return c}});var n=t(7462),s=t(3366),o=(t(7294),t(3905)),u=["components"],i={sidebar_label:"Keeper"},l="Keeper \u51fd\u6570",a={unversionedId:"developers/wordle-keeper",id:"developers/wordle-keeper",title:"Keeper \u51fd\u6570",description:"\u73b0\u5728\u662f\u65f6\u5019\u5c06\u5728\u6bcf\u6761\u4fe1\u606f\u4e0a\u6267\u884c Keeper \u51fd\u6570\u4e86\u3002 \u6839\u636e Cosmos-SDK \u6587\u6863, Keeper \u5b9a\u4e49\u5982\u4e0b:",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/developers/wordle-keeper.md",sourceDirName:"developers",slug:"/developers/wordle-keeper",permalink:"/zh/developers/wordle-keeper",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/wordle-keeper.md",tags:[],version:"current",frontMatter:{sidebar_label:"Keeper"},sidebar:"developers",previous:{title:"\u7c7b\u578b",permalink:"/zh/developers/wordle-types"},next:{title:"\u8fd0\u884c Wordle \u94fe",permalink:"/zh/developers/run-wordle"}},d={},c=[{value:"SubmitWordle \u51fd\u6570",id:"submitwordle-\u51fd\u6570",level:2},{value:"SubmitGuess \u51fd\u6570",id:"submitguess-\u51fd\u6570",level:2},{value:"\u539f\u578b\u7f13\u51b2\u533a\u6587\u4ef6",id:"\u539f\u578b\u7f13\u51b2\u533a\u6587\u4ef6",level:2}],p={toc:c};function m(e){var r=e.components,t=(0,s.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"keeper-\u51fd\u6570"},"Keeper \u51fd\u6570"),(0,o.kt)("p",null,"\u73b0\u5728\u662f\u65f6\u5019\u5c06\u5728\u6bcf\u6761\u4fe1\u606f\u4e0a\u6267\u884c Keeper \u51fd\u6570\u4e86\u3002 \u6839\u636e Cosmos-SDK \u6587\u6863, ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/master/building-modules/keeper.html"},"Keeper")," \u5b9a\u4e49\u5982\u4e0b:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Cosmos SDK \u6a21\u5757\u7684\u4e3b\u8981\u6838\u5fc3\u88ab\u79f0\u4e3aKeeper. Keeper \u5904\u7406\u4e0e store\u7684\u4ea4\u4e92, \u5f15\u5bfc\u4e0e\u5176\u4ed6Keeper\u8fdb\u884c\u8de8\u6a21\u5757\u4ea4\u4e92\uff0c\u5177\u5907\u6a21\u5757\u7684\u5927\u90e8\u5206\u6838\u5fc3\u529f\u80fd\u3002")),(0,o.kt)("p",null,"Keeper \u662f Cosmos \u7684\u62bd\u8c61\u5316\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u4e0e Key-Value store \u8fdb\u884c\u4ea4\u4e92\u5e76\u6539\u53d8\u533a\u5757\u94fe\u7684\u72b6\u6001\u3002"),(0,o.kt)("p",null,"\u5728\u8fd9\u65b9\u9762\uff0c\u5b83\u5c06\u5e2e\u52a9\u6211\u4eec\u52fe\u52d2\u51fa\u521b\u5efa\u7684\u6bcf\u4e2a\u4fe1\u606f\u7684\u903b\u8f91\u3002"),(0,o.kt)("h2",{id:"submitwordle-\u51fd\u6570"},"SubmitWordle \u51fd\u6570"),(0,o.kt)("p",null,"\u6211\u4eec\u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"SubmitWordle")," \u51fd\u6570\u5f00\u59cb\u3002"),(0,o.kt)("p",null,"\u6253\u5f00\u4ee5\u4e0b\u6587\u4ef6\uff1a ",(0,o.kt)("inlineCode",{parentName:"p"},"x/wordle/keeper/msg_server_submit_wordle.go")),(0,o.kt)("p",null,"\u5728\u4e0b\u9762\u7684\u5185\u5bb9\u4e2d\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u5728\u7a0d\u540e\u8fdb\u884c\u8ba8\u8bba\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package keeper\n\nimport (\n  "context"\n  "crypto/sha256"\n  "encoding/hex"\n  "github.com/YazzyYaz/wordle/x/wordle/types"\n  sdk "github.com/cosmos/cosmos-sdk/types"\n  sdkerrors "github.com/cosmos/cosmos-sdk/types/errors"\n  "time"\n  "unicode"\n)\n\nfunc (k msgServer) SubmitWordle(goCtx context.Context, msg *types.MsgSubmitWordle) (*types.MsgSubmitWordleResponse, error) {\n  ctx := sdk.UnwrapSDKContext(goCtx)\n  // Check to See the Wordle is 5 letters\n  if len(msg.Word) != 5 {\n    return nil, sdkerrors.Wrap(sdkerrors.ErrInvalidRequest, "Wordle Must Be A 5 Letter Word")\n  }\n  // Check to See Only Alphabets Are Passed for the Wordle\n  if !(IsLetter(msg.Word)) {\n    return nil, sdkerrors.Wrap(sdkerrors.ErrInvalidRequest, "Wordle Must Only Consist Of Letters In The Alphabet")\n  }\n\n  // Use Current Day to Create The Index of the Newly-Submitted Wordle of the Day\n  currentTime := time.Now().Local()\n  var currentTimeBytes = []byte(currentTime.Format("2006-01-02"))\n  var currentTimeHash = sha256.Sum256(currentTimeBytes)\n  var currentTimeHashString = hex.EncodeToString(currentTimeHash[:])\n  // Hash The Newly-Submitted Wordle of the Day\n  var submittedSolutionHash = sha256.Sum256([]byte(msg.Word))\n  var submittedSolutionHashString = hex.EncodeToString(submittedSolutionHash[:])\n\n  var wordle = types.Wordle{\n    Index:     currentTimeHashString,\n    Word:      submittedSolutionHashString,\n    Submitter: msg.Creator,\n  }\n\n  // Try to Get Wordle From KV Store Using Current Day as Key\n  // This Helps ensure only one Wordle is submitted per day\n  _, isFound := k.GetWordle(ctx, currentTimeHashString)\n  if isFound {\n    return nil, sdkerrors.Wrap(sdkerrors.ErrInvalidRequest, "Wordle of the Day is Already Submitted")\n  }\n  // Write Wordle to KV Store\n  k.SetWordle(ctx, wordle)\n  return &types.MsgSubmitWordleResponse{}, nil\n}\n\nfunc IsLetter(s string) bool {\n  for _, r := range s {\n    if !unicode.IsLetter(r) {\n      return false\n    }\n  }\n  return true\n}\n')),(0,o.kt)("p",null,"\u5173\u4e8e",(0,o.kt)("inlineCode",{parentName:"p"},"SubmitWordle")," Keeper \u51fd\u6570\uff0c\u6211\u4eec\u9700\u8981\u786e\u5b9a\u51e0\u9879\u5185\u5bb9\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},'\u6211\u4eec\u9996\u5148\u8981\u786e\u4fdd\u751f\u6210\u7684"Wordle of the Day "\u7684\u5355\u8bcd\u662f 5\u4e2a\u5b57\u6bcd\u957f\uff0c\u5e76\u4e14\u53ea\u4f7f\u7528\u5b57\u6bcd\u3002 \u4e5f\u5c31\u662f\u8bf4\u4e0d\u80fd\u5728\u5b57\u7b26\u4e32\u4e2d\u63d0\u4ea4\u6574\u6570\u3002'),(0,o.kt)("li",{parentName:"ul"},"\u7136\u540e\u6211\u4eec\u6839\u636e\u5f53\u5929Wordle\u751f\u6210\u7684\u65f6\u523b\u521b\u5efa\u4e00\u4e2a\u54c8\u5e0c\u503c\u3002 \u6211\u4eec\u5c06\u8fd9\u4e2a\u54c8\u5e0c\u503c\u8bbe\u7f6e\u4e3aWordle\u7c7b\u578b\u7684\u7d22\u5f15\u3002 \u8fd9\u4fbf\u4e8e\u6211\u4eec\u67e5\u8be2\u6709\u5173\u8fd9\u4e2aWordle\u7684\u4efb\u4f55\u731c\u6d4b\uff0c\u800c\u540e\u7eed\u8fdb\u884c\u731c\u6d4b\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u7136\u540e\u6211\u4eec\u68c0\u67e5\u4eca\u5929\u65e5\u671f\u7684\u7d22\u5f15\u662f\u5426\u4e3a\u7a7a\u503c\u3002 \u5982\u679c\u5b83\u4e0d\u662f\u7a7a\u503c\uff0c\u5c31\u610f\u5473\u7740\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2aWordle \u751f\u6210\u4e86\u3002 \u8bf7\u6ce8\u610f\uff0c\u4e00\u5929\u53ea\u80fd\u751f\u6210\u4e00\u4e2aWordle\u3002 \u6bcf\u4e2a\u4eba\u53ea\u80fd\u53bb\u731c\u6d4b\u5f53\u5929\u5df2\u751f\u6210\u7684Wordle\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u6211\u4eec\u8fd8\u5728\u5176\u4e2d\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\uff0c\u7528\u6765\u68c0\u67e5\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u53ea\u5305\u542b\u5b57\u6bcd\u5b57\u7b26\u3002")),(0,o.kt)("h2",{id:"submitguess-\u51fd\u6570"},"SubmitGuess \u51fd\u6570"),(0,o.kt)("p",null,"\u6211\u4eec\u4f1a\u6dfb\u52a0\u7684\u4e0b\u4e00\u4e2a Keeper \u51fd\u6570\u5982\u4e0b\uff1a ",(0,o.kt)("inlineCode",{parentName:"p"},"x/wordle/keeper/msg_server_submit_guess.go")),(0,o.kt)("p",null,"\u6253\u5f00\u8be5\u6587\u4ef6\uff0c\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u5728\u7a0d\u540e\u89e3\u91ca\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package keeper\n\nimport (\n  "context"\n  "crypto/sha256"\n  "encoding/hex"\n  "github.com/YazzyYaz/wordle/x/wordle/types"\n  sdk "github.com/cosmos/cosmos-sdk/types"\n  sdkerrors "github.com/cosmos/cosmos-sdk/types/errors"\n  "strconv"\n  "time"\n  "github.com/tendermint/tendermint/crypto"\n)\n\nfunc (k msgServer) SubmitGuess(goCtx context.Context, msg *types.MsgSubmitGuess) (*types.MsgSubmitGuessResponse, error) {\n  ctx := sdk.UnwrapSDKContext(goCtx)\n  // Check Word is 5 Characters Long\n  if len(msg.Word) != 5 {\n    return nil, sdkerrors.Wrap(sdkerrors.ErrInvalidRequest, "Guess Must Be A 5 Letter Word!")\n  }\n\n  // Check String Contains Alphabet Letters Only\n  if !(IsLetter(msg.Word)) {\n    return nil, sdkerrors.Wrap(sdkerrors.ErrInvalidRequest, "Guess Must Only Consist of Alphabet Letters!")\n  }\n\n  // Get Current Day to Pull Up Wordle of That Day As A Hash\n  currentTime := time.Now().Local()\n  var currentTimeBytes = []byte(currentTime.Format("2006-01-02"))\n  var currentTimeHash = sha256.Sum256(currentTimeBytes)\n  var currentTimeHashString = hex.EncodeToString(currentTimeHash[:])\n  wordle, isFound := k.GetWordle(ctx, currentTimeHashString)\n  if !isFound {\n    return nil, sdkerrors.Wrap(sdkerrors.ErrInvalidRequest, "Wordle of The Day Hasn\'t Been Submitted Yet. Feel Free to Submit One!")\n  }\n\n  // We Convert Current Day and Guesser to A Hash To Use As An Index For Today\'s Guesses For That Guesser\n  // That Way, A Person Can Guess 6 Times A Day For Each New Wordle Created\n  var currentTimeGuesserBytes = []byte(currentTime.Format("2006-01-02") + msg.Creator)\n  var currentTimeGuesserHash = sha256.Sum256(currentTimeGuesserBytes)\n  var currentTimeGuesserHashString = hex.EncodeToString(currentTimeGuesserHash[:])\n  // Hash The Guess To The Wordle\n  var submittedSolutionHash = sha256.Sum256([]byte(msg.Word))\n  var submittedSolutionHashString = hex.EncodeToString(submittedSolutionHash[:])\n\n  // Get the Latest Guess entry for this Submitter for the current Wordle of the Day\n  var count int\n  guess, isFound := k.GetGuess(ctx, currentTimeGuesserHashString)\n  if isFound {\n    // Check if Submitter Reached 6 Tries\n    if guess.Count == strconv.Itoa(6) {\n      return nil, sdkerrors.Wrap(sdkerrors.ErrInvalidRequest, "You Have Guessed The Maximum Amount of Times for The Day! Try Again Tomorrow With A New Wordle.")\n    }\n    currentCount, err := strconv.Atoi(guess.Count)\n    if err != nil {\n      panic(err)\n    }\n    count = currentCount\n  } else {\n    // Initialize Count Value If No Entry Exists for this Submitter for Today\'s Wordle\n    count = 0\n  }\n  // Increment Guess Count\n  count += 1\n  var newGuess = types.Guess{\n    Index:     currentTimeGuesserHashString,\n    Submitter: msg.Creator,\n    Word:      submittedSolutionHashString,\n    Count:     strconv.Itoa(count),\n  }\n  // Remove Current Guess Entry to be Updated With New Entry\n  k.RemoveGuess(ctx, currentTimeGuesserHashString)\n  // Add New Guess Entry\n  k.SetGuess(ctx, newGuess)\n  // Setup Reward \n  reward := sdk.Coins{sdk.NewInt64Coin("WORDLE", 100)}\n  if !(wordle.Word == submittedSolutionHashString) {\n    return &types.MsgSubmitGuessResponse{Title: "Wrong Answer", Body: "Your Guess Was Wrong. Try Again"}, nil\n  } else {\n    // If Submitter Guesses Correctly\n    guesserAddress, _ := sdk.AccAddressFromBech32(msg.Creator)\n    moduleAcct := sdk.AccAddress(crypto.AddressHash([]byte(types.ModuleName)))\n    // Send Reward\n    k.bankKeeper.SendCoins(ctx, guesserAddress, moduleAcct, reward) \n    return &types.MsgSubmitGuessResponse{Title: "Correct", Body: "You Guessed The Wordle Correctly!"}, nil\n  }\n}\n')),(0,o.kt)("p",null,"\u6211\u4eec\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u505a\u4e86\u4ee5\u4e0b\u4e8b\u60c5\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u9996\u5148\uff0c\u6211\u4eec\u518d\u6b21\u5bf9\u8fd9\u4e2a\u8bcd\u8fdb\u884c\u521d\u6b65\u68c0\u67e5\uff0c\u4ee5\u786e\u4fdd\u5b83\u662f5\u4e2a\u5b57\u7b26\uff0c\u5e76\u4e14\u53ea\u4f7f\u7528\u5b57\u6bcd\uff0c\u8fd9\u53ef\u4ee5\u5728\u5c06\u6765\u91cd\u6784\u6216\u5728CLI\u547d\u4ee4\u4e2d\u68c0\u67e5\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u7136\u540e\uff0c\u6211\u4eec\u901a\u8fc7\u83b7\u53d6\u5f53\u5929\u65e5\u671f\u7684\u54c8\u5e0c\u5b57\u7b26\u4e32\u6765\u83b7\u5f97\u5f53\u5929\u7684Wordle\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa\u4e86\u5f53\u5929\u7684\u54c8\u5e0c\u5b57\u7b26\u4e32\u4ee5\u53caSubmitter\uff08\u731c\u6d4b\u4eba\uff09\u3002 \u8fd9\u5141\u8bb8\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f7f\u7528\u5f53\u524d\u65e5\u671f\u548cSubmitter\uff08\u731c\u6d4b\u4eba\uff09\u5730\u5740\u7684\u4e14\u53ef\u7d22\u5f15\u7684\u731c\u6d4b\u7c7b\u578b\u3002 \u5f53\u65b0\u7684\u4e00\u5929\u548c\u67d0\u4e2a\u5730\u5740\u60f3\u8981\u731c\u6d4b\u5f53\u5929\u7684Wordle\u65f6\uff0c\u8fd9\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u3002 \u7d22\u5f15\u7684\u8bbe\u7f6e\u786e\u4fdd\u4ed6\u4eec\u53ef\u4ee5\u6bcf\u5929\u731c\u6d4b\u65b0\u7684Wordle \u4f46\u6bcf\u5929\u6700\u591a\u53ea\u80fd\u731c6\u6b21\u3002"),(0,o.kt)("li",{parentName:"ul"},"\u7136\u540e\u6211\u4eec\u68c0\u67e5\u4eca\u5929Wordle\u7684\u731c\u6d4b\u8005\u7684\u731c\u6d4b\u7c7b\u578b\u662f\u5426\u8fbe\u5230\u4e866\u6b21\u3002 \u5982\u679c\u6ca1\u6709\uff0c\u6211\u4eec\u5c31\u7ee7\u7eed\u8ba1\u6570\u3002 \u6211\u4eec\u968f\u540e\u4f1a\u68c0\u67e5\u731c\u6d4b\u662f\u5426\u6b63\u786e\u3002 \u6b64\u540e\uff0c\u6211\u4eec\u4f1a\u5b58\u50a8\u731c\u6d4b\u7c7b\u578b\u4e0e\u66f4\u65b0\u7684\u8ba1\u6570\u3002")),(0,o.kt)("h2",{id:"\u539f\u578b\u7f13\u51b2\u533a\u6587\u4ef6"},"\u539f\u578b\u7f13\u51b2\u533a\u6587\u4ef6"),(0,o.kt)("p",null,"  \u6211\u4eec\u9700\u8981\u5bf9\u4e00\u4e9b\u6587\u4ef6\u8fdb\u884c\u8c03\u6574\u4ee5\u5b9e\u73b0\u4ee5\u4e0a\u529f\u80fd\u3002"),(0,o.kt)("p",null,"\u9996\u5148\u9700\u8981\u8c03\u6574\u7684\u662f",(0,o.kt)("inlineCode",{parentName:"p"},"proto/wordle/tx.proto"),"\u3002"),(0,o.kt)("p",null,"\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u7528\u4ee5\u4e0b\u4ee3\u7801\u586b\u5199\u7a7a\u767d\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"MsgSubmitGuessResponse"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"message MsgSubmitGuessResponse {\n  string title = 1;\n  string body = 2;\n}\n")),(0,o.kt)("p",null,"\u4e0b\u4e00\u4e2a\u6587\u4ef6\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"x/wordle/types/expected_keepers.go")),(0,o.kt)("p",null,"\u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u5c06 SendCoins \u65b9\u6cd5\u6dfb\u52a0\u5230 BankKeeper \u7684 \u63a5\u53e3\uff0c\u4ee5\u4fbf\u5c06\u5956\u52b1\u53d1\u9001\u7ed9\u6b63\u786e\u7684\u731c\u6d4b\u8005\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"type BankKeeper interface {\n  SendCoins(ctx sdk.Context, fromAddr sdk.AccAddress, toAddr sdk.AccAddress, amt sdk.Coins) error\n}\n")),(0,o.kt)("p",null,"\u901a\u8fc7\u4ee5\u4e0a\u6b65\u9aa4\uff0c\u6211\u4eec\u6267\u884c\u4e86 Keeper \u51fd\u6570! \u662f\u65f6\u5019\u7f16\u5199\u533a\u5757\u94fe\uff0c\u5e76\u8fdb\u884c\u6d4b\u8bd5\u4e86\u3002"))}m.isMDXComponent=!0}}]);