"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[8280],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=s,g=p["".concat(i,".").concat(m)]||p[m]||u[m]||r;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:s,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},325:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var a=n(7462),s=n(3366),r=(n(7294),n(3905)),o=["components"],l={},i=void 0,c={unversionedId:"nodes/systemd",id:"nodes/systemd",title:"systemd",description:"- - -",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/nodes/systemd.md",sourceDirName:"nodes",slug:"/nodes/systemd",permalink:"/es/nodes/systemd",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/nodes/systemd.md",tags:[],version:"current",frontMatter:{},sidebar:"nodes",previous:{title:"Resources",permalink:"/es/category/resources"},next:{title:"keys",permalink:"/es/nodes/keys"}},d={},u=[{value:"Nodos de consenso",id:"nodos-de-consenso",level:2},{value:"Iniciar celestia-app con SystemD",id:"iniciar-celestia-app-con-systemd",level:3},{value:"Nodos de disponibilidad de datos",id:"nodos-de-disponibilidad-de-datos",level:2},{value:"Nodo full storage Celestia",id:"nodo-full-storage-celestia",level:3},{value:"Nodo bridge de Celestia",id:"nodo-bridge-de-celestia",level:3},{value:"Celestia Light Node",id:"celestia-light-node",level:3}],p={toc:u};function m(e){var t=e.components,n=(0,s.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,"sidebar_label : SystemD"),(0,r.kt)("hr",null),(0,r.kt)("h1",{id:"configurando-tu-nodo-como-un-proceso-en-segundo-plano-con-systemd"},"Configurando tu nodo como un proceso en segundo plano con SystemD"),(0,r.kt)("p",null,"SystemD es un servicio de daemon \xfatil para ejecutar aplicaciones como procesos en segundo plano."),(0,r.kt)("h2",{id:"nodos-de-consenso"},"Nodos de consenso"),(0,r.kt)("p",null,"Si est\xe1s ejecutando un nodo completo de validador o consenso, aqu\xed tienes los pasos para configurar ",(0,r.kt)("inlineCode",{parentName:"p"},"celestia-appd")," como un proceso en segundo plano."),(0,r.kt)("h3",{id:"iniciar-celestia-app-con-systemd"},"Iniciar celestia-app con SystemD"),(0,r.kt)("p",null,"SystemD es un servicio de daemon \xfatil para ejecutar aplicaciones como procesos en segundo plano."),(0,r.kt)("p",null,"Crear archivo de sistema Celestia-App:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo tee <<EOF >/dev/null /etc/systemd/system/celestia-appd.service\n[Unit]\nDescription=celestia-appd Cosmos daemon\nAfter=network-online.target\n[Service]\nUser=$USER\nExecStart=$HOME/go/bin/celestia-appd start\nRestart=on-failure\nRestartSec=3\nLimitNOFILE=4096\n[Install]\nWantedBy=multi-user.target\nEOF\n")),(0,r.kt)("p",null,"Si el archivo se ha creado con \xe9xito, podr\xe1s ver su contenido:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cat /etc/systemd/system/celestia-appd.service\n")),(0,r.kt)("p",null,"Activar e iniciar daemon de celestia-appd:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"systemctl enable celestia-appd\nsystemctl start celestia-appd\n")),(0,r.kt)("p",null,"Comprueba si el demonio se ha iniciado correctamente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"systemctl status celestia-appd\n")),(0,r.kt)("p",null,"Comprueba los registros de daemon en tiempo real:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"journalctl -u celestia-appd.service -f\n")),(0,r.kt)("p",null,"Para comprobar si tu nodo est\xe1 sincronizado antes de continuar:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"curl -s localhost:26657/status | jq .result | jq .sync_info\n")),(0,r.kt)("p",null,"Aseg\xfarate de que tienes ",(0,r.kt)("inlineCode",{parentName:"p"},'"catching_up": false'),", de lo contrario d\xe9jalo ejecutando hasta que est\xe9 sincronizado."),(0,r.kt)("h2",{id:"nodos-de-disponibilidad-de-datos"},"Nodos de disponibilidad de datos"),(0,r.kt)("h3",{id:"nodo-full-storage-celestia"},"Nodo full storage Celestia"),(0,r.kt)("p",null,"Crear archivo de nodo de Full Storage de Celestia:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo tee <<EOF >/dev/null /etc/systemd/system/celestia-full.service\n[Unit]\nDescription=celestia-full Cosmos daemon\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$HOME/go/bin/celestia full start\nRestart=on-failure\nRestartSec=3\nLimitNOFILE=4096\n\n[Install]\nWantedBy=multi-user.target\nEOF\n")),(0,r.kt)("p",null,"Si el archivo se ha creado con \xe9xito, podr\xe1s ver su contenido:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cat /etc/systemd/system/celestia-full.service\n")),(0,r.kt)("p",null,"Activar e iniciar el demonio celestia-full:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"systemctl enable celestia-full\nsystemctl start celestia-full && journalctl -u \\\ncelestia-full.service -f\n")),(0,r.kt)("p",null,"Deber\xedas estar viendo los registros que aparecen a trav\xe9s de la sincronizaci\xf3n de nodos de full storage."),(0,r.kt)("h3",{id:"nodo-bridge-de-celestia"},"Nodo bridge de Celestia"),(0,r.kt)("p",null,"Crear el archivo systemd de Celestia Bridge:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo tee <<EOF >/dev/null /etc/systemd/system/celestia-bridge.service\n[Unit]\nDescription=celestia-bridge Cosmos daemon\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$HOME/go/bin/celestia bridge start\nRestart=on-failure\nRestartSec=3\nLimitNOFILE=4096\n\n[Install]\nWantedBy=multi-user.target\nEOF\n")),(0,r.kt)("p",null,"Si el archivo se ha creado con \xe9xito, podr\xe1s ver su contenido:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cat /etc/systemd/system/celestia-bridge.service\n")),(0,r.kt)("p",null,"Activar e iniciar daemon de celestia-appd:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"systemctl enable celestia-bridge\nsystemctl start celestia-bridge && journalctl -u \\\ncelestia-bridge.service -f\n")),(0,r.kt)("p",null,"Ahora, el nodo bridge Celestia comenzar\xe1 a sincronizar cabeceras y bloques de almacenamiento desde la aplicaci\xf3n Celestia."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Nota: al inicio, podemos ver la ",(0,r.kt)("inlineCode",{parentName:"p"},"multiaddress")," de Celestia Bridge Node. Esto es ",(0,r.kt)("strong",{parentName:"p"},"necesario para futuras conexiones de Nodo Light")," y comunicaci\xf3n entre Nodos Celestia Bridge")),(0,r.kt)("p",null,"Ejemplo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"NODE_IP=<ip-address>\n/ip4/$NODE_IP/tcp/2121/p2p/12D3KooWD5wCBJXKQuDjhXFjTFMrZoysGVLtVht5hMoVbSLCbV22\n")),(0,r.kt)("p",null,"Deber\xedas estar viendo los registros que aparecen a trav\xe9s de la sincronizaci\xf3n de nodos de full storage."),(0,r.kt)("h3",{id:"celestia-light-node"},"Celestia Light Node"),(0,r.kt)("p",null,"Inicia el Light Node como proceso demonio en segundo plano"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"sudo tee <<EOF >/dev/null /etc/systemd/system/celestia-lightd.service\n[Unit]\nDescription=celestia-lightd Light Node\nAfter=network-online.target\n\n[Service]\nUser=$USER\nExecStart=$HOME/go/bin/celestia light start --core.ip <ip-address> --core.grpc.port <port>\nRestart=on-failure\nRestartSec=3\nLimitNOFILE=4096\n\n[Install]\nWantedBy=multi-user.target\nEOF\n")),(0,r.kt)("p",null,"Si el archivo se ha creado con \xe9xito, podr\xe1s ver su contenido:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cat /etc/systemd/system/celestia-lightd.service\n")),(0,r.kt)("p",null,"Activar e iniciar daemon de celestia-appd:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"systemctl enable celestia-lightd\nsystemctl start celestia-lightd\n")),(0,r.kt)("p",null,"Comprueba si el demonio se ha iniciado correctamente:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"systemctl status celestia-lightd\n")),(0,r.kt)("p",null,"Comprueba los registros de daemon en tiempo real:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"journalctl -u celestia-lightd.service -f\n")),(0,r.kt)("p",null,"Ahora, el Nodo Celestia Light comenzar\xe1 a sincronizar las cabeceras. Despu\xe9s de que finalice la sincronizaci\xf3n, Light Node har\xe1 Data Availability Sampling (DAS) del Nodo Bridge."))}m.isMDXComponent=!0}}]);