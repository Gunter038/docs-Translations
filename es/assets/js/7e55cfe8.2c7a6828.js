"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[4718],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return t?r.createElement(f,s(s({ref:n},u),{},{components:t})):r.createElement(f,s({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4220:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),s=["components"],i={sidebar_label:"Mensajes"},l="Mensajes",c={unversionedId:"developers/wordle-messages",id:"developers/wordle-messages",title:"Mensajes",description:"Los mensajes nos permiten procesar y enviar informaci\xf3n a nuestro m\xf3dulo espec\xedfico.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/developers/wordle-messages.md",sourceDirName:"developers",slug:"/developers/wordle-messages",permalink:"/es/developers/wordle-messages",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/wordle-messages.md",tags:[],version:"current",frontMatter:{sidebar_label:"Mensajes"},sidebar:"developers",previous:{title:"M\xf3dulo",permalink:"/es/developers/wordle-module"},next:{title:"Tipos",permalink:"/es/developers/wordle-types"}},u={},p=[{value:"Andamiaje (Scaffolding) de un mensaje",id:"andamiaje-scaffolding-de-un-mensaje",level:2}],m={toc:p};function d(e){var n=e.components,t=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mensajes"},"Mensajes"),(0,o.kt)("p",null,"Los mensajes nos permiten procesar y enviar informaci\xf3n a nuestro m\xf3dulo espec\xedfico."),(0,o.kt)("p",null,"De los documentos Cosmos-SDK, ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/master/building-modules/messages-and-queries.html#messages"},"mensajes")," son:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"En el SDK de Cosmos, los mensajes son objetos que est\xe1n contenidos en las transacciones para activar transiciones de estado. Cada m\xf3dulo de Cosmos SDK define una lista de mensajes y c\xf3mo manejarlos.")),(0,o.kt)("p",null,"Para los mensajes para Wordle, dado nuestro dise\xf1o inicial, haremos 2 mensajes con ignite."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"La primera es: ",(0,o.kt)("inlineCode",{parentName:"li"},"SubmitWordle")," y solo pasa la Palabra del D\xeda."),(0,o.kt)("li",{parentName:"ul"},"El segundo es: ",(0,o.kt)("inlineCode",{parentName:"li"},"SubmitGuess")," e intenta adivinar la palabra enviada. Tambi\xe9n pasa una palabra como adivinaci\xf3n.")),(0,o.kt)("p",null,"Con estos dise\xf1os iniciales, \xa1podemos empezar a crear nuestros mensajes!"),(0,o.kt)("h2",{id:"andamiaje-scaffolding-de-un-mensaje"},"Andamiaje (Scaffolding) de un mensaje"),(0,o.kt)("p",null,"Para crear el mensaje ",(0,o.kt)("inlineCode",{parentName:"p"},"SubmitWordle"),", ejecutamos el siguiente comando:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"ignite scaffold message submit-wordle word\n")),(0,o.kt)("p",null,"Esto crea el mensaje ",(0,o.kt)("inlineCode",{parentName:"p"},"submit-wordle")," que toma ",(0,o.kt)("inlineCode",{parentName:"p"},"word")," como par\xe1metro."),(0,o.kt)("p",null,"Ahora creamos el mensaje final, ",(0,o.kt)("inlineCode",{parentName:"p"},"SubmitAdguess"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"ignite scaffold message submit-guess word\n")),(0,o.kt)("p",null,"Aqu\xed estamos pasando una palabra como adivinaci\xf3n con ",(0,o.kt)("inlineCode",{parentName:"p"},"submit-guess"),"."))}d.isMDXComponent=!0}}]);