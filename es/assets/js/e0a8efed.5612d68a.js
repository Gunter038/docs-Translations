"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[6435],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return t?a.createElement(g,o(o({ref:n},u),{},{components:t})):a.createElement(g,o({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6830:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return d}});var a=t(7462),r=t(3366),s=(t(7294),t(3905)),o=["components"],i={sidebar_label:"Dependencias CosmWasm"},l="Instalaciones de dependencias de CosmWasm",c={unversionedId:"developers/cosmwasm-dependency",id:"developers/cosmwasm-dependency",title:"Instalaciones de dependencias de CosmWasm",description:"Configuracion de entorno",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/developers/cosmwasm-dependency.md",sourceDirName:"developers",slug:"/developers/cosmwasm-dependency",permalink:"/es/developers/cosmwasm-dependency",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/cosmwasm-dependency.md",tags:[],version:"current",frontMatter:{sidebar_label:"Dependencias CosmWasm"},sidebar:"developers",previous:{title:"Vista general de CosmWasm",permalink:"/es/developers/cosmwasm"},next:{title:"Configurar el entorno de red",permalink:"/es/developers/cosmwasm-environment"}},u={},d=[{value:"Configuracion de entorno",id:"configuracion-de-entorno",level:2},{value:"Dependencia de Golang",id:"dependencia-de-golang",level:2},{value:"Instalaci\xf3n de Rust",id:"instalaci\xf3n-de-rust",level:2},{value:"Rustup",id:"rustup",level:3},{value:"Gu\xeda de instalaci\xf3n de Docker",id:"gu\xeda-de-instalaci\xf3n-de-docker",level:2},{value:"instalaci\xf3n de wasmd",id:"instalaci\xf3n-de-wasmd",level:2}],p={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,o);return(0,s.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"instalaciones-de-dependencias-de-cosmwasm"},"Instalaciones de dependencias de CosmWasm"),(0,s.kt)("h2",{id:"configuracion-de-entorno"},"Configuracion de entorno"),(0,s.kt)("p",null,"Para este tutorial, usaremos ",(0,s.kt)("inlineCode",{parentName:"p"},"curl")," y ",(0,s.kt)("inlineCode",{parentName:"p"},"jq")," como herramientas \xfatiles."),(0,s.kt)("p",null,"Puedes seguir la gu\xeda sobre c\xf3mo instalarlos ",(0,s.kt)("a",{parentName:"p",href:"/es/developers/environment#setting-up-dependencies"},"aqu\xed"),"."),(0,s.kt)("h2",{id:"dependencia-de-golang"},"Dependencia de Golang"),(0,s.kt)("p",null,"La versi\xf3n de Golang utilizada para este tutorial es v1.18+"),(0,s.kt)("p",null,"Si est\xe1s usando una distribuci\xf3n Linux, puedes instalar Golang siguiendo nuestro tutorial ",(0,s.kt)("a",{parentName:"p",href:"/es/developers/environment#install-golang"},"aqu\xed"),"."),(0,s.kt)("h2",{id:"instalaci\xf3n-de-rust"},"Instalaci\xf3n de Rust"),(0,s.kt)("h3",{id:"rustup"},"Rustup"),(0,s.kt)("p",null,"Primero, antes de instalar Rust, necesitar\xe1s instalar ",(0,s.kt)("inlineCode",{parentName:"p"},"rustup"),"."),(0,s.kt)("p",null,"En sistemas Mac/Linux, aqu\xed est\xe1n los comandos para instalarlos:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n")),(0,s.kt)("p",null,"Despu\xe9s de la instalaci\xf3n, sigue los comandos aqu\xed para configurar Rust."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"rustup default stable\ncargo version\n\nrustup target list --installed\nrustup target add wasm32-unknown-unknown\n")),(0,s.kt)("h2",{id:"gu\xeda-de-instalaci\xf3n-de-docker"},"Gu\xeda de instalaci\xf3n de Docker"),(0,s.kt)("p",null,"Utilizaremos Docker m\xe1s adelante en este tutorial para compilar un smart contract para usar una peque\xf1a huella."),(0,s.kt)("p",null,"Te recomendamos instalar Docker en tu m\xe1quina."),(0,s.kt)("p",null,"Los ejemplos sobre c\xf3mo instalarlo en Linux se encuentran ",(0,s.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/ubuntu/"},"aqu\xed"),"."),(0,s.kt)("p",null,"Encuentra las instrucciones adecuadas espec\xedficas para tu sistema operativo."),(0,s.kt)("h2",{id:"instalaci\xf3n-de-wasmd"},"instalaci\xf3n de wasmd"),(0,s.kt)("p",null,"Aqu\xed vamos a descargar el repositorio ",(0,s.kt)("inlineCode",{parentName:"p"},"wasmd")," y reemplazar Tendermint con Optimint. Optimint es un reemplazo para Tendermint que permite a aplicaciones Cosmos-SDK conectarse a la red de Disponibilidad de Datos de Celestia."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/CosmWasm/wasmd.git\ncd wasmd\ngit fetch --tags\ngit checkout v0.27.0\ngo mod edit -replace github.com/cosmos/cosmos-sdk=github.com/celestiaorg/cosmos-sdk@v0.45.4-optimint-v0.3.5\ngo mod tidy \ngo mod download\nmake install\n")))}m.isMDXComponent=!0}}]);