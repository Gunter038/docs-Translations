"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[9076],{3905:function(e,t,a){a.d(t,{Zo:function(){return l},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),m=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=m(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=m(a),d=n,f=u["".concat(i,".").concat(d)]||u[d]||p[d]||o;return a?r.createElement(f,s(s({ref:t},l),{},{components:a})):r.createElement(f,s({ref:t},l))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var m=2;m<o;m++)s[m]=a[m];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},5134:function(e,t,a){a.r(t),a.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return p}});var r=a(7462),n=a(3366),o=(a(7294),a(3905)),s=["components"],c={sidebar_label:"Vista general de CosmWasm"},i="CosmWasm en Optimint",m={unversionedId:"developers/cosmwasm",id:"developers/cosmwasm",title:"CosmWasm en Optimint",description:"CosmWasm es una plataforma de smart contracts construida para el ecosistema de Cosmos haciendo uso de WebAssembly (Wasm) para construir smart contracts para Cosmos-SDK. En este tutorial, vamos a explorar c\xf3mo integrar CosmWasm con la capa de disponibilidad de datos de Celestia usando Optimint.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/developers/cosmwasm.md",sourceDirName:"developers",slug:"/developers/cosmwasm",permalink:"/es/developers/cosmwasm",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/cosmwasm.md",tags:[],version:"current",frontMatter:{sidebar_label:"Vista general de CosmWasm"},sidebar:"developers",previous:{title:"CosmWasm",permalink:"/es/category/cosmwasm"},next:{title:"Dependencias CosmWasm",permalink:"/es/developers/cosmwasm-dependency"}},l={},p=[],u={toc:p};function d(e){var t=e.components,a=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cosmwasm-en-optimint"},"CosmWasm en Optimint"),(0,o.kt)("p",null,"CosmWasm es una plataforma de smart contracts construida para el ecosistema de Cosmos haciendo uso de WebAssembly (Wasm) para construir smart contracts para Cosmos-SDK. En este tutorial, vamos a explorar c\xf3mo integrar CosmWasm con la capa de disponibilidad de datos de Celestia usando Optimint."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},'NOTA: Este tutorial explorar\xe1 el desarrollo con Optimint, que todav\xeda est\xe1 en fase Alfa. Si encuentras errores, por favor escribe un ticket de Github Issue o h\xe1znoslo saber en nuestro Discord. Adem\xe1s, mientras que Optimint te permite crear registros soberanos en Celestia, actualmente no soporta pruebas de fraude a\xfan y est\xe1 por lo tanto funcionando en modo "pesimista", donde los nodos necesitar\xedan volver a ejecutar las transacciones para comprobar la validez de la cadena (i.. un nodo completo). Adem\xe1s, Optimint actualmente s\xf3lo soporta un solo secuenciador.')),(0,o.kt)("p",null,"Puedes aprender m\xe1s sobre CosmWasm ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmwasm.com/docs/1.0/"},"aqu\xed"),"."),(0,o.kt)("p",null,"En este tutorial, repasaremos lo siguiente:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/es/developers/cosmwasm-dependency"},"Configurando tus dependencias para tus smart contracts de CosmWasm")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/es/developers/cosmwasm-dependency#wasmd-installation"},"Configurando Optimint en CosmWasm")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/es/developers/cosmwasm-environment"},"Instanciar una red local para tu cadena CosmWasm conectada a Celestia")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/es/developers/cosmwasm-contract-deployment"},"Implementando un smart contract de Rust a la cadena CosmWasm")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/es/developers/cosmwasm-contract-interaction"},"Interactuando con el smart contract"))),(0,o.kt)("p",null,"El smart contract que usaremos para este tutorial es uno proporcionado por el equipo de CosmWasm para la compra de Nameservice."),(0,o.kt)("p",null,"Puedes revisar el contrato ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/InterWasm/cw-contracts/tree/main/contracts/nameservice"},"aqu\xed"),"."),(0,o.kt)("p",null,"C\xf3mo escribir el smart contract de Rust para Nameservice est\xe1 fuera del alcance de este tutorial. En el futuro a\xf1adiremos m\xe1s tutoriales para escribir smart contracts de CosmWasm para Celestia."))}d.isMDXComponent=!0}}]);