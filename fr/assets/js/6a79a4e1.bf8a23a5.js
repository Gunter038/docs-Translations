"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[6062],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),i=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,u=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),p=i(r),m=o,f=p["".concat(u,".").concat(m)]||p[m]||c[m]||l;return r?n.createElement(f,s(s({ref:t},d),{},{components:r})):n.createElement(f,s({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,s=new Array(l);s[0]=p;var a={};for(var u in t)hasOwnProperty.call(t,u)&&(a[u]=t[u]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var i=2;i<l;i++)s[i]=r[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},9931:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return a},metadata:function(){return i},toc:function(){return c}});var n=r(7462),o=r(3366),l=(r(7294),r(3905)),s=["components"],a={sidebar_label:"Module"},u="Cr\xe9er le module Wordle",i={unversionedId:"developers/wordle-module",id:"developers/wordle-module",title:"Cr\xe9er le module Wordle",description:"Pour le module Wordle, nous pouvons ajouter des d\xe9pendances offertes par Cosmos-SDK.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/developers/wordle-module.md",sourceDirName:"developers",slug:"/developers/wordle-module",permalink:"/fr/developers/wordle-module",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/wordle-module.md",tags:[],version:"current",frontMatter:{sidebar_label:"Module"},sidebar:"developers",previous:{title:"Installer Optimint",permalink:"/fr/developers/install-optimint"},next:{title:"Messages",permalink:"/fr/developers/wordle-messages"}},d={},c=[{value:"Scaffolder un Module",id:"scaffolder-un-module",level:2}],p={toc:c};function m(e){var t=e.components,r=(0,o.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"cr\xe9er-le-module-wordle"},"Cr\xe9er le module Wordle"),(0,l.kt)("p",null,"Pour le module Wordle, nous pouvons ajouter des d\xe9pendances offertes par Cosmos-SDK."),(0,l.kt)("p",null,"\xc0 partir de la documentation du Cosmos-SDK, un ",(0,l.kt)("a",{parentName:"p",href:"https://docs.ignite.com/guide/nameservice#cosmos-sdk-modules"},"module")," est d\xe9fini comme suit :"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Dans une blockchain de Cosmos SDK, la logique sp\xe9cifique \xe0 l'application est impl\xe9ment\xe9e dans des modules s\xe9par\xe9s. Les modules gardent le code facile \xe0 comprendre et \xe0 r\xe9utiliser. Chaque module contient son propre message et son processeur de transaction, alors que le Cosmos SDK  est responsable du routage de chaque message vers son module respectif.")),(0,l.kt)("p",null,"De multiples modules existent pour le slashing, la validation, l'authentification."),(0,l.kt)("h2",{id:"scaffolder-un-module"},"Scaffolder un Module"),(0,l.kt)("p",null,"Nous utiliserons la d\xe9pendance du module ",(0,l.kt)("inlineCode",{parentName:"p"},"bank")," pour les transactions."),(0,l.kt)("p",null,"\xc0 partir de la documentation du Cosmos-SDK, un ",(0,l.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/master/modules/bank/"},(0,l.kt)("inlineCode",{parentName:"a"},"bank"))," est d\xe9fini comme suit :"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Le module bancaire est responsable de la gestion des transferts de \"coins\" multi-actifs entre comptes et du suivi des pseudo-transferts de cas sp\xe9ciaux qui doivent fonctionner diff\xe9remment avec certains types de comptes (notamment d\xe9l\xe9guant/d\xe9l\xe8guant pour l'acquisition de comptes). Il expose plusieurs interfaces avec des capacit\xe9s diff\xe9rentes pour une interaction s\xe9curis\xe9e avec d'autres modules qui doivent modifier les soldes des utilisateurs.")),(0,l.kt)("p",null,"Nous construisons le module avec la d\xe9pendance ",(0,l.kt)("inlineCode",{parentName:"p"},"bank")," avec la commande suivante :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"ignite scaffold module wordle --dep bank\n")),(0,l.kt)("p",null,"Ceci scaffoldera le module Wordle \xe0 notre projet de Chaine World."))}m.isMDXComponent=!0}}]);