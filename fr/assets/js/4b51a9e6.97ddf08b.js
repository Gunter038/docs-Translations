"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[20],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=o,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8377:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_label:"D\xe9ploiement de contrat"},c="D\xe9ploiement de contrat sur CosmWasm avec Optimint",s={unversionedId:"developers/cosmwasm-contract-deployment",id:"developers/cosmwasm-contract-deployment",title:"D\xe9ploiement de contrat sur CosmWasm avec Optimint",description:"Compiler le Contrat Intelligent",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/developers/cosmwasm-contract-deployment.md",sourceDirName:"developers",slug:"/developers/cosmwasm-contract-deployment",permalink:"/fr/developers/cosmwasm-contract-deployment",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/cosmwasm-contract-deployment.md",tags:[],version:"current",frontMatter:{sidebar_label:"D\xe9ploiement de contrat"},sidebar:"developers",previous:{title:"Configurer l'Environnement du R\xe9seau",permalink:"/fr/developers/cosmwasm-environment"},next:{title:"Interaction de Contrat",permalink:"/fr/developers/cosmwasm-contract-interaction"}},u={},p=[{value:"Compiler le Contrat Intelligent",id:"compiler-le-contrat-intelligent",level:2},{value:"Tests unitaires",id:"tests-unitaires",level:2},{value:"Contrat Intelligent Optimis\xe9",id:"contrat-intelligent-optimis\xe9",level:2},{value:"D\xe9ploiement du Contrat",id:"d\xe9ploiement-du-contrat",level:2}],m={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"d\xe9ploiement-de-contrat-sur-cosmwasm-avec-optimint"},"D\xe9ploiement de contrat sur CosmWasm avec Optimint"),(0,a.kt)("h2",{id:"compiler-le-contrat-intelligent"},"Compiler le Contrat Intelligent"),(0,a.kt)("p",null,"Nous allons ex\xe9cuter les commandes suivantes pour retirer le contrat intelligent Nameservice et le compiler :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/InterWasm/cw-contracts\ncd cw-contracts\ncd contracts/nameservice\ncargo wasm\n")),(0,a.kt)("p",null,"Le contrat compil\xe9 est affich\xe9 \xe0: ",(0,a.kt)("inlineCode",{parentName:"p"},"cible/wasm32-unknown-unknown/release/cw_nameservice.wasm"),"."),(0,a.kt)("h2",{id:"tests-unitaires"},"Tests unitaires"),(0,a.kt)("p",null,"Si nous voulons ex\xe9cuter des essais, nous pouvons le faire par la commande suivante :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"cargo unit-test\n")),(0,a.kt)("h2",{id:"contrat-intelligent-optimis\xe9"},"Contrat Intelligent Optimis\xe9"),(0,a.kt)("p",null,"Parce que nous d\xe9ployons le contrat intelligent compil\xe9 sur ",(0,a.kt)("inlineCode",{parentName:"p"},"wasmd"),", nous voulons qu'il soit aussi petit que possible."),(0,a.kt)("p",null,"L'\xe9quipe CosmWasm fournit un outil appel\xe9 ",(0,a.kt)("inlineCode",{parentName:"p"},"rust-optimizer")," qui a besoin de Docker pour pouvoir compiler."),(0,a.kt)("p",null,"Ex\xe9cuter la commande suivante :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'sudo docker run --rm -v "$(pwd)":/code \\\n  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \\\n  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \\\n  cosmwasm/rust-optimizer:0.12.6\n')),(0,a.kt)("p",null,"This will place the optimized Wasm bytecode at ",(0,a.kt)("inlineCode",{parentName:"p"},"artifacts/cw_nameservice.wasm"),"."),(0,a.kt)("h2",{id:"d\xe9ploiement-du-contrat"},"D\xe9ploiement du Contrat"),(0,a.kt)("p",null,"D\xe9ployons maintenant notre contrat intelligent !"),(0,a.kt)("p",null,"Ex\xe9cuter le code suivant :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"TX_HASH=$(wasmd tx wasm store artifacts/cw_nameservice.wasm --from $KEY_NAME --keyring-backend test $TXFLAG --output json -y | jq -r '.txhash') \n")),(0,a.kt)("p",null,"Cela vous fournira le hash de la transaction pour le d\xe9ploiement du contrat intelligent. \xc9tant donn\xe9 que nous utilisons Optimint, il y aura du d\xe9lai pour inclure la transaction car Optimint est en attente de la couche de disponibilit\xe9 des donn\xe9es de Celestia qui doit confirmer que le bloc a \xe9t\xe9 inclus avant de soumettre un nouveau bloc."))}d.isMDXComponent=!0}}]);