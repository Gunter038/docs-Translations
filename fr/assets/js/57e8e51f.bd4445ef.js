"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[5710],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=s,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:s,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},659:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(7462),s=n(3366),o=(n(7294),n(3905)),a=["components"],l={sidebar_label:"Messages"},i="Messages",u={unversionedId:"developers/wordle-messages",id:"developers/wordle-messages",title:"Messages",description:"Les messages nous permettent de traiter et soumettre de l'information \xe0 notre module sp\xe9cifique.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/developers/wordle-messages.md",sourceDirName:"developers",slug:"/developers/wordle-messages",permalink:"/fr/developers/wordle-messages",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/developers/wordle-messages.md",tags:[],version:"current",frontMatter:{sidebar_label:"Messages"},sidebar:"developers",previous:{title:"Module",permalink:"/fr/developers/wordle-module"},next:{title:"Types",permalink:"/fr/developers/wordle-types"}},c={},p=[{value:"\xc9chafauder un message",id:"\xe9chafauder-un-message",level:2}],m={toc:p};function d(e){var t=e.components,n=(0,s.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"messages"},"Messages"),(0,o.kt)("p",null,"Les messages nous permettent de traiter et soumettre de l'information \xe0 notre module sp\xe9cifique."),(0,o.kt)("p",null,"Selon la d\xe9finition fournie par le Cosmos-SDK, les ",(0,o.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/master/building-modules/messages-and-queries.html#messages"},"messages")," sont :"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Dans le Cosmos-SDK, les messages sont des objects qui sont contenus dans des transactions pour d\xe9clencher des transitions d'\xe9tat. Chaque module du Cosmos-SDK d\xe9finit une liste de messages et comment les traiter.")),(0,o.kt)("p",null,"Pour des messages pour Wordle, et \xe9tant donn\xe9 notre concept initial, nous ferons 2 messages avec ignite."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Le premier est : ",(0,o.kt)("inlineCode",{parentName:"li"},"SubmitWordle")," et il ne g\xe9n\xe8re que le Wordle du jour."),(0,o.kt)("li",{parentName:"ul"},"Le second est : ",(0,o.kt)("inlineCode",{parentName:"li"},"SubmitGuess")," et il tente de deviner le wordle soumis. Ce message transmet \xe9galement une proposition de mot.")),(0,o.kt)("p",null,"Avec ces concepts initiaux, nous pouvons commencer \xe0 cr\xe9er nos messages !"),(0,o.kt)("h2",{id:"\xe9chafauder-un-message"},"\xc9chafauder un message"),(0,o.kt)("p",null,"Pour cr\xe9er le message ",(0,o.kt)("inlineCode",{parentName:"p"},"SubmitWordle"),", nous ex\xe9cutons la commande suivante :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"ignite scaffold message submit-wordle word\n")),(0,o.kt)("p",null,"Cela cr\xe9e le message ",(0,o.kt)("inlineCode",{parentName:"p"},"submit-wordle")," qui prend ",(0,o.kt)("inlineCode",{parentName:"p"},"word")," en tant que param\xe8tre."),(0,o.kt)("p",null,"Nous cr\xe9ons maintenant le message final, ",(0,o.kt)("inlineCode",{parentName:"p"},"SubmitGuess")," :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"ignite scaffold message submit-guess word\n")),(0,o.kt)("p",null,"Ici nous soumettons un mot avec ",(0,o.kt)("inlineCode",{parentName:"p"},"submit-guess"),"."))}d.isMDXComponent=!0}}]);