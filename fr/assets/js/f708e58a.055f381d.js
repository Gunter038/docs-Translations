"use strict";(self.webpackChunkcelestia_docs=self.webpackChunkcelestia_docs||[]).push([[7504],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var s=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=s.createContext({}),c=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return s.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},p=s.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return n?s.createElement(f,i(i({ref:t},u),{},{components:n})):s.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<r;c++)i[c]=n[c];return s.createElement.apply(null,i)}return s.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7125:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return d}});var s=n(7462),a=n(3366),r=(n(7294),n(3905)),i=["components"],o={},l=void 0,c={unversionedId:"concepts/how-celestia-works/transaction-lifecycle",id:"concepts/how-celestia-works/transaction-lifecycle",title:"transaction-lifecycle",description:"- - -",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/concepts/how-celestia-works/transaction-lifecycle.md",sourceDirName:"concepts/how-celestia-works",slug:"/concepts/how-celestia-works/transaction-lifecycle",permalink:"/fr/concepts/how-celestia-works/transaction-lifecycle",draft:!1,editUrl:"https://github.com/celestiaorg/docs/tree/main/docs/concepts/how-celestia-works/transaction-lifecycle.md",tags:[],version:"current",frontMatter:{},sidebar:"concepts",previous:{title:"data-availability-layer",permalink:"/fr/concepts/how-celestia-works/data-availability-layer"},next:{title:"Specifications",permalink:"/fr/category/specifications"}},u={},d=[{value:"V\xe9rification de la disponibilit\xe9 des donn\xe9es",id:"v\xe9rification-de-la-disponibilit\xe9-des-donn\xe9es",level:2}],p={toc:d};function m(e){var t=e.components,o=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,s.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("p",null,"sidebar_label : Couche de disponibilit\xe9 des donn\xe9es de Celestia"),(0,r.kt)("hr",null),(0,r.kt)("h1",{id:"cycle-de-vie-dune-transaction-celestia-app"},"Cycle de vie d'une transaction Celestia App"),(0,r.kt)("p",null,"Les utilisateurs demandent \xe0 l'application Celestia de rendre les donn\xe9es disponibles en envoyant des transactions ",(0,r.kt)("inlineCode",{parentName:"p"},"PayForData"),". Chacune de ces transactions de ce type se compose de l'identit\xe9 de l'exp\xe9diteur, des donn\xe9es \xe0 mettre \xe0 disposition aussi appel\xe9 le message, la taille des donn\xe9es, le namespace ID, et une signature. Chaque producteur de bloc effectue en lot plusieurs transactions ",(0,r.kt)("inlineCode",{parentName:"p"},"PayForData")," dans un bloc."),(0,r.kt)("p",null,"Avant de proposer le bloc, le producteur le transmet \xe0 la machine \xe0 \xe9tats via ABCI++, o\xf9 chaque transaction ",(0,r.kt)("inlineCode",{parentName:"p"},"PayForData")," est divis\xe9e en un message espac\xe9 par un nom (d\xe9sign\xe9 par ",(0,r.kt)("inlineCode",{parentName:"p"},"Msg")," dans la figure ci-dessous), c'est-\xe0-dire les donn\xe9es avec le namespace ID, et une transaction ex\xe9cutable (d\xe9sign\xe9e par ",(0,r.kt)("inlineCode",{parentName:"p"},"e-Tx")," dans la figure ci-dessous) qui ne contient pas les donn\xe9es, mais seulement un engagement qui peut \xeatre utilis\xe9 ult\xe9rieurement pour prouver que les donn\xe9es ont bien \xe9t\xe9 mises \xe0 disposition."),(0,r.kt)("p",null,"Ainsi, les donn\xe9es du bloc se composent de donn\xe9es partitionn\xe9es en namespaces et en transactions ex\xe9cutables. Notez que seules ces transactions sont ex\xe9cut\xe9es par la machine \xe0 \xe9tats de Celestia une fois le bloc valid\xe9."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Cycle de vie d&#39;une transaction Celestia App",src:n(8883).Z,width:"1490",height:"658"})),(0,r.kt)("p",null,"Ensuite, le producteur du bloc ajoute \xe0 l'en-t\xeate du bloc un engagement des donn\xe9es du bloc. Comme d\xe9crit ",(0,r.kt)("a",{parentName:"p",href:"/fr/concepts/how-celestia-works/data-availability-layer#fraud-proofs-of-incorrectly-extended-data"},"ici"),", l'engagement est la racine de Merkle des 4k racines de Merkle interm\xe9diaires (c'est-\xe0-dire une pour chaque ligne et colonne de la matrice \xe9tendue). Pour calculer cet engagement, le producteur de blocs effectue les op\xe9rations suivantes :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Il divise les transactions ex\xe9cutables et les donn\xe9es namespaced en parts. Chaque part est constitu\xe9e de quelques octets pr\xe9fix\xe9s par un namespace ID. \xc0 cette fin, les transactions ex\xe9cutables sont associ\xe9es \xe0 un namespace r\xe9serv\xe9."),(0,r.kt)("li",{parentName:"ul"},"Il classe ces parts dans une matrice carr\xe9e (par rang\xe9es). Notez que les parts sont compl\xe9t\xe9es \xe0 la prochaine puissance de deux. Le carr\xe9 de r\xe9sultats de taille k \xd7 k est appel\xe9 donn\xe9es d'origine (original data)."),(0,r.kt)("li",{parentName:"ul"},"Il \xe9tend les donn\xe9es originales \xe0 une matrice carr\xe9e de 2k \xd7 2k en utilisant le sch\xe9ma de codage de Reed-Solomon \xe0 2 dimensions d\xe9crit ci-dessus. Les parts \xe9tendues (c'est-\xe0-dire contenant des donn\xe9es d'effacement) sont associ\xe9es \xe0 un autre namespace r\xe9serv\xe9."),(0,r.kt)("li",{parentName:"ul"},"Il calcule un engagement pour chaque ligne et chaque colonne de la matrice \xe9tendue en utilisant les NMT d\xe9crites ci-dessus.")),(0,r.kt)("p",null,"Ainsi, l'engagement des donn\xe9es du bloc est la racine d'un arbre de Merkle dont les feuilles sont les racines d'une for\xeat de sous-arbres de Namespaced Merkle, un pour chaque ligne et colonne de la matrice \xe9tendue."),(0,r.kt)("h2",{id:"v\xe9rification-de-la-disponibilit\xe9-des-donn\xe9es"},"V\xe9rification de la disponibilit\xe9 des donn\xe9es"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA network",src:n(2745).Z,width:"1406",height:"468"})),(0,r.kt)("p",null,"Pour am\xe9liorer la connectivit\xe9, le Node Celestia am\xe9liore l'App Celestia avec un r\xe9seau libp2p s\xe9par\xe9, c'est-\xe0-dire le r\xe9seau dit ",(0,r.kt)("em",{parentName:"p"},"DA"),", qui r\xe9pond aux demandes de DAS."),(0,r.kt)("p",null,"Les light nodes se connectent \xe0 un Node Celestia dans le r\xe9seau de DA, \xe9coutent les en-t\xeates de blocs \xe9tendus (c'est-\xe0-dire les en-t\xeates de blocs accompagn\xe9s des m\xe9tadonn\xe9es de DA pertinentes, telles que les racines de Merkle interm\xe9diaires 4k), et ex\xe9cutent un DAS sur les en-t\xeates re\xe7us (c'est-\xe0-dire demander des morceaux de donn\xe9es al\xe9atoires)."),(0,r.kt)("p",null,"Notez que, bien qu'elle soit recommand\xe9e, l'ex\xe9cution de la DAS est facultative -- les light nodes pourraient simplement faire confiance aux donn\xe9es correspondant d'engagements dans les en-t\xeates de bloc, qui ont \xe9t\xe9 effectivement rendus disponibles par la couche de Celestia DA. De plus, les light nodes peuvent \xe9galement soumettre des transactions \xe0 Celestia App, c'est-\xe0-dire des transactions ",(0,r.kt)("inlineCode",{parentName:"p"},"PayForData"),"."),(0,r.kt)("p",null,"Lors de l'ex\xe9cution du DAS pour un en-t\xeate de bloc, chaque light node demande aux nodes Celestia un certain nombre de morceaux de donn\xe9es al\xe9atoires provenant de la matrice \xe9tendue et des preuves de Merkle correspondantes. Si toutes les requ\xeates sont r\xe9ussies, alors le light node accepte l'en-t\xeate de bloc comme valide (du point de vue de DA)."),(0,r.kt)("p",null,"Si au moins l'une des requ\xeates \xe9choue (c'est-\xe0-dire que le morceau de donn\xe9es n'est pas re\xe7u ou que la preuve de Merkle n'est pas valide), le light node rejette l'en-t\xeate de bloc et r\xe9essaie plus tard. Le nouvel essai est n\xe9cessaire pour traiter les faux n\xe9gatifs, c'est-\xe0-dire que les en-t\xeates de bloc sont rejet\xe9s bien que les donn\xe9es du bloc soient disponibles. Cela peut \xeatre d\xfb par exemple \xe0 la congestion du r\xe9seau."),(0,r.kt)("p",null,"Alternativement, les light nodes peuvent accepter un en-t\xeate de bloc bien que les donn\xe9es ne soient pas disponibles, c'est-\xe0-dire un ",(0,r.kt)("em",{parentName:"p"},"faux positif"),". Cela est possible car la propri\xe9t\xe9 de solidit\xe9 (c'est-\xe0-dire que si un light node honn\xeate accepte un bloc comme disponible, alors au moins un full node honn\xeate aura \xe9ventuellement les donn\xe9es du bloc entier) est garantie de mani\xe8re probabiliste (pour plus de d\xe9tails, jetez un coup d'\u0153il au ",(0,r.kt)("a",{parentName:"p",href:"https://arxiv.org/abs/1809.09044"},"document original"),")."),(0,r.kt)("p",null,"En affinant les param\xe8tres de Celestia (par exemple, le nombre de blocs de donn\xe9es \xe9chantillonn\xe9s par chaque light node), la probabilit\xe9 de faux positifs peut \xeatre suffisamment r\xe9duite pour que les producteurs de blocs ne soient pas incit\xe9s \xe0 retenir les donn\xe9es des blocs."))}m.isMDXComponent=!0},2745:function(e,t,n){t.Z=n.p+"assets/images/consensus-da-ab9f6c12664d44ea0fb84a1ffefa321a.png"},8883:function(e,t,n){t.Z=n.p+"assets/images/tx-lifecycle-319d52b12360a167c298946bb8979b70.png"}}]);